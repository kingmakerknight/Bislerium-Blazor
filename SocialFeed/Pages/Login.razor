@page "/login"
@layout EmptyLayout
@using System.Text.Json
@using Blazored.LocalStorage
@using SocialFeed.Models
@using SocialFeed.Models.Request
@using SocialFeed.Models.Response
@using SocialFeed.Services.Base
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject BaseService BaseService

<PageTitle>Login</PageTitle>

<div class="authentication-bg position-relative">
    <div class="position-absolute start-0 end-0 start-0 bottom-0 w-100 h-100">
        <svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 800 800'>
            <g fill-opacity='0.22'>
                <circle style="fill: rgba(var(--ct-primary-rgb), 0.1);" cx='400' cy='400' r='600'/>
                <circle style="fill: rgba(var(--ct-primary-rgb), 0.2);" cx='400' cy='400' r='500'/>
                <circle style="fill: rgba(var(--ct-primary-rgb), 0.3);" cx='400' cy='400' r='300'/>
                <circle style="fill: rgba(var(--ct-primary-rgb), 0.4);" cx='400' cy='400' r='200'/>
                <circle style="fill: rgba(var(--ct-primary-rgb), 0.5);" cx='400' cy='400' r='100'/>
            </g>
        </svg>
    </div>
    <div class="account-pages pt-sm-5 pb-4 pb-sm-5 position-relative">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-xxl-4 col-lg-5">
                    <div class="card">
                        <div class="card-header py-4 text-center bg-primary">
                            <a href="index.html">
                                <!-- <span><img src="/images/logo.png" alt="logo" height="22"></span> -->
                                <h1 class="text-white h2 my-0">SocialFeed</h1>
                            </a>
                        </div>
                        <div class="card-body p-4">
                            <div class="text-center w-75 m-auto">
                                <h4 class="text-dark-50 text-center pb-0 fw-bold">Sign In</h4>
                                <p class="text-muted mb-4">Enter your username and password to access admin panel.</p>
                            </div>

                            <form @onsubmit="@HandleValidSubmit">
                                <AntiforgeryToken />
                                <div class="mb-3">
                                    <label for="emailaddress" class="form-label">Email Address</label>
                                    <input class="form-control" @bind="_loginRequestDto.EmailAddress" type="email" id="emailaddress" required="" placeholder="Enter your email address">
                                </div>
                                <div class="mb-3">
                                    <NavLink class="nav-link" href="reset-password">
                                        <small class="text-muted float-end">Forgot your password?</small>
                                    </NavLink>
                                    <label for="password" class="form-label">Password</label>
                                    <div class="input-group input-group-merge">
                                        <input type="password" @bind="_loginRequestDto.Password" id="password" class="form-control" placeholder="Enter your password">
                                        <div class="input-group-text" data-password="false">
                                            <span class="password-eye"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-3 mb-3">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="checkbox-signin" checked>
                                        <label class="form-check-label" for="checkbox-signin">Remember me</label>
                                    </div>
                                </div>
                                <div class="mb-3 mb-0 text-center">
                                    <button class="btn btn-primary" type="submit"> Log In </button>
                                </div>
                            </form>
                        </div> 
                    </div>
                    <div class="row mt-3">
                        <div class="col-12 text-center">
                            <p class="text-muted">Don't have an account?
                                <NavLink class="nav-link" href="register">
                                    <b>Sign Up</b>
                                </NavLink>
                            </p>
                        </div> 
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>

@code{
    private string Message = "";
    
    [CascadingParameter]
    private GlobalState? GlobalState { get; set; }
    
    private readonly LoginRequestDto _loginRequestDto = new();

    private async Task HandleValidSubmit()   
    {
        try
        {
            var loginRequest = new LoginRequestDto()
            {
                EmailAddress = _loginRequestDto.EmailAddress,
                Password = _loginRequestDto.Password
            };

            var jsonRequest = JsonSerializer.Serialize(loginRequest);

            var content = new StringContent(jsonRequest, System.Text.Encoding.UTF8, "application/json");

            var authResult = await BaseService.PostAsync<Derived<LoginResponseDto>>("account/login", content);
          
            await LocalStorage.SetItemAsync("access_token", authResult?.Result.Token ?? "");

            if (GlobalState == null)
            {
                var globalState = new GlobalState()
                {
                    UserId = authResult?.Result.Id ?? 0,
                    RoleId = authResult?.Result.RoleId ?? 0,
                    Name = authResult?.Result.Name ?? string.Empty,
                    RoleName = authResult?.Result.Role ?? string.Empty,
                    ImageUrl = authResult?.Result.ImageUrl ?? string.Empty,
                };

                GlobalState = globalState;
            }

            var navigation = "/feeds";

            NavigationManager.NavigateTo(navigation);
        }
        catch (Exception ex)
        {
            Message = "The username or password is incorrect. Try again.";      
        }
    }
}